du_melt[["col"]]  <= img_ylim[2])
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
geom_point(data=this_cat, aes(x=x, y=y, color="is_star"), size=3) +
scale_fill_continuous(low="#000000", high="#FFFFFF")
img_xlim <- c(200, 400)
img_ylim <- c(200, 400)
this_cat <- filter(dcat,
dcat[[cat.px.x.col]]  >= img_xlim[1],
dcat[[cat.px.x.col]]  <= img_xlim[2],
dcat[[cat.px.y.col]]  >= img_ylim[1],
dcat[[cat.px.y.col]]  <= img_ylim[2])
this_cat$x <- this_cat[[cat.px.x.col]]
this_cat$y <- this_cat[[cat.px.y.col]]
this_du <- filter(du_melt,
du_melt[["row"]]  >= img_xlim[1],
du_melt[["row"]]  <= img_xlim[2],
du_melt[["col"]]  >= img_ylim[1],
du_melt[["col"]]  <= img_ylim[2])
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
geom_point(data=this_cat, aes(x=x, y=y, color="is_star"), size=3) +
scale_fill_continuous(low="#000000", high="#FFFFFF")
this_cat
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
geom_point(data=this_cat, aes(x=x, y=y, color=is_star), size=3) +
scale_fill_continuous(low="#000000", high="#FFFFFF")
?scale_fill_continuous
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
geom_point(data=this_cat, aes(x=x, y=y, color=is_star), size=3) +
scale_fill_continuous(low="#000000", high="#FFFFFF", na.value = "purple")
grid.arrange(
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
geom_point(data=this_cat, aes(x=x, y=y, color=is_star), size=3) +
scale_fill_continuous(low="#000000", high="#FFFFFF", na.value = "purple")
,
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
scale_fill_continuous(low="#000000", high="#FFFFFF", na.value = "purple")
,
ncol=2
)
img_xlim <- c(200, 300)
img_ylim <- c(300, 400)
this_cat <- filter(dcat,
dcat[[cat.px.x.col]]  >= img_xlim[1],
dcat[[cat.px.x.col]]  <= img_xlim[2],
dcat[[cat.px.y.col]]  >= img_ylim[1],
dcat[[cat.px.y.col]]  <= img_ylim[2])
this_cat$x <- this_cat[[cat.px.x.col]]
this_cat$y <- this_cat[[cat.px.y.col]]
this_du <- filter(du_melt,
du_melt[["row"]]  >= img_xlim[1],
du_melt[["row"]]  <= img_xlim[2],
du_melt[["col"]]  >= img_ylim[1],
du_melt[["col"]]  <= img_ylim[2])
grid.arrange(
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
geom_point(data=this_cat, aes(x=x, y=y, color=is_star), size=3) +
scale_fill_continuous(low="#000000", high="#FFFFFF", na.value = "purple")
,
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
scale_fill_continuous(low="#000000", high="#FFFFFF", na.value = "purple")
,
ncol=2
)
grid.arrange(
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
geom_point(data=this_cat, aes(x=x, y=y, color=is_star), size=5) +
scale_fill_continuous(low="#000000", high="#FFFFFF", na.value = "purple")
,
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
scale_fill_continuous(low="#000000", high="#FFFFFF", na.value = "purple")
,
ncol=2
)
file_name <- sprintf("/tmp/frame-%c-003900-6-0269.csv", band.letter[band])
file_name <- sprintf("/tmp/frame-%s-003900-6-0269.csv", band.letter[band])
file_name
band <- 3
band.letters <- c("u", "g", "r", "i", "z")
file_name <- sprintf("/tmp/frame-%s-003900-6-0269.csv", band.letter[band])
du <- as.matrix(read.csv(file_name, header=F))
colnames(du) <- 1:ncol(du)
rownames(du) <- 1:nrow(du)
du_melt <- melt(du)
names(du_melt) <- c("row", "col", "value")
dcat <- read.csv("/tmp/catalog-003900-6-0269.csv", header=T)
band.letter <- band.letters[band]
cat.px.x.col <- sprintf("pix_x_%d", band)
cat.px.y.col <- sprintf("pix_y_%d", band)
img_xlim <- c(200, 300)
img_ylim <- c(300, 400)
this_cat <- filter(dcat,
dcat[[cat.px.x.col]]  >= img_xlim[1],
dcat[[cat.px.x.col]]  <= img_xlim[2],
dcat[[cat.px.y.col]]  >= img_ylim[1],
dcat[[cat.px.y.col]]  <= img_ylim[2])
this_cat$x <- this_cat[[cat.px.x.col]]
this_cat$y <- this_cat[[cat.px.y.col]]
this_du <- filter(du_melt,
du_melt[["row"]]  >= img_xlim[1],
du_melt[["row"]]  <= img_xlim[2],
du_melt[["col"]]  >= img_ylim[1],
du_melt[["col"]]  <= img_ylim[2])
grid.arrange(
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
geom_point(data=this_cat, aes(x=x, y=y, color=is_star), size=5) +
scale_fill_continuous(low="#000000", high="#FFFFFF", na.value = "purple")
,
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
scale_fill_continuous(low="#000000", high="#FFFFFF", na.value = "purple")
,
ncol=2
)
file_name <- sprintf("/tmp/frame-%s-003900-6-0269.csv", band.letter[band])
du <- as.matrix(read.csv(file_name, header=F))
colnames(du) <- 1:ncol(du)
rownames(du) <- 1:nrow(du)
du_melt <- melt(du)
names(du_melt) <- c("row", "col", "value")
dcat <- read.csv("/tmp/catalog-003900-6-0269.csv", header=T)
file_name <- sprintf("/tmp/frame-%s-003900-6-0269.csv", band.letters[band])
du <- as.matrix(read.csv(file_name, header=F))
colnames(du) <- 1:ncol(du)
rownames(du) <- 1:nrow(du)
du_melt <- melt(du)
names(du_melt) <- c("row", "col", "value")
dcat <- read.csv("/tmp/catalog-003900-6-0269.csv", header=T)
band.letter <- band.letters[band]
cat.px.x.col <- sprintf("pix_x_%d", band)
cat.px.y.col <- sprintf("pix_y_%d", band)
img_xlim <- c(200, 300)
img_ylim <- c(300, 400)
this_cat <- filter(dcat,
dcat[[cat.px.x.col]]  >= img_xlim[1],
dcat[[cat.px.x.col]]  <= img_xlim[2],
dcat[[cat.px.y.col]]  >= img_ylim[1],
dcat[[cat.px.y.col]]  <= img_ylim[2])
this_cat$x <- this_cat[[cat.px.x.col]]
this_cat$y <- this_cat[[cat.px.y.col]]
this_du <- filter(du_melt,
du_melt[["row"]]  >= img_xlim[1],
du_melt[["row"]]  <= img_xlim[2],
du_melt[["col"]]  >= img_ylim[1],
du_melt[["col"]]  <= img_ylim[2])
grid.arrange(
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
geom_point(data=this_cat, aes(x=x, y=y, color=is_star), size=5) +
scale_fill_continuous(low="#000000", high="#FFFFFF", na.value = "purple")
,
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
scale_fill_continuous(low="#000000", high="#FFFFFF", na.value = "purple")
,
ncol=2
)
img_xlim <- c(200, 350)
img_ylim <- c(300, 450)
this_cat <- filter(dcat,
dcat[[cat.px.x.col]]  >= img_xlim[1],
dcat[[cat.px.x.col]]  <= img_xlim[2],
dcat[[cat.px.y.col]]  >= img_ylim[1],
dcat[[cat.px.y.col]]  <= img_ylim[2])
this_cat$x <- this_cat[[cat.px.x.col]]
this_cat$y <- this_cat[[cat.px.y.col]]
this_du <- filter(du_melt,
du_melt[["row"]]  >= img_xlim[1],
du_melt[["row"]]  <= img_xlim[2],
du_melt[["col"]]  >= img_ylim[1],
du_melt[["col"]]  <= img_ylim[2])
grid.arrange(
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
geom_point(data=this_cat, aes(x=x, y=y, color=is_star), size=5) +
scale_fill_continuous(low="#000000", high="#FFFFFF", na.value = "purple")
,
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
scale_fill_continuous(low="#000000", high="#FFFFFF", na.value = "purple")
,
ncol=2
)
img_xlim <- c(200, 325)
img_ylim <- c(300, 425)
this_cat <- filter(dcat,
dcat[[cat.px.x.col]]  >= img_xlim[1],
dcat[[cat.px.x.col]]  <= img_xlim[2],
dcat[[cat.px.y.col]]  >= img_ylim[1],
dcat[[cat.px.y.col]]  <= img_ylim[2])
this_cat$x <- this_cat[[cat.px.x.col]]
this_cat$y <- this_cat[[cat.px.y.col]]
this_du <- filter(du_melt,
du_melt[["row"]]  >= img_xlim[1],
du_melt[["row"]]  <= img_xlim[2],
du_melt[["col"]]  >= img_ylim[1],
du_melt[["col"]]  <= img_ylim[2])
grid.arrange(
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
geom_point(data=this_cat, aes(x=x, y=y, color=is_star), size=5) +
scale_fill_continuous(low="#000000", high="#FFFFFF", na.value = "purple")
,
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
scale_fill_continuous(low="#000000", high="#FFFFFF", na.value = "purple")
,
ncol=2
)
img_xlim <- c(200, 350)
img_ylim <- c(300, 425)
this_cat <- filter(dcat,
dcat[[cat.px.x.col]]  >= img_xlim[1],
dcat[[cat.px.x.col]]  <= img_xlim[2],
dcat[[cat.px.y.col]]  >= img_ylim[1],
dcat[[cat.px.y.col]]  <= img_ylim[2])
this_cat$x <- this_cat[[cat.px.x.col]]
this_cat$y <- this_cat[[cat.px.y.col]]
this_du <- filter(du_melt,
du_melt[["row"]]  >= img_xlim[1],
du_melt[["row"]]  <= img_xlim[2],
du_melt[["col"]]  >= img_ylim[1],
du_melt[["col"]]  <= img_ylim[2])
grid.arrange(
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
geom_point(data=this_cat, aes(x=x, y=y, color=is_star), size=5) +
scale_fill_continuous(low="#000000", high="#FFFFFF", na.value = "purple")
,
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
scale_fill_continuous(low="#000000", high="#FFFFFF", na.value = "purple")
,
ncol=2
)
img_xlim <- c(200, 350)
img_ylim <- c(300, 425)
this_cat <- filter(dcat,
dcat[[cat.px.x.col]]  >= img_xlim[1],
dcat[[cat.px.x.col]]  <= img_xlim[2],
dcat[[cat.px.y.col]]  >= img_ylim[1],
dcat[[cat.px.y.col]]  <= img_ylim[2])
this_cat$x <- this_cat[[cat.px.x.col]]
this_cat$y <- this_cat[[cat.px.y.col]]
this_du <- filter(du_melt,
du_melt[["row"]]  >= img_xlim[1],
du_melt[["row"]]  <= img_xlim[2],
du_melt[["col"]]  >= img_ylim[1],
du_melt[["col"]]  <= img_ylim[2])
grid.arrange(
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
geom_point(data=this_cat, aes(x=x, y=y, color=is_star), size=5) +
scale_fill_continuous(low="#000000", high="#FFFFFF", na.value = "purple")
,
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
scale_fill_continuous(low="#000000", high="#FFFFFF", na.value = "purple")
,
ncol=2
)
img_xlim <- c(200, 350)
img_ylim <- c(300, 450)
this_cat <- filter(dcat,
dcat[[cat.px.x.col]]  >= img_xlim[1],
dcat[[cat.px.x.col]]  <= img_xlim[2],
dcat[[cat.px.y.col]]  >= img_ylim[1],
dcat[[cat.px.y.col]]  <= img_ylim[2])
this_cat$x <- this_cat[[cat.px.x.col]]
this_cat$y <- this_cat[[cat.px.y.col]]
this_du <- filter(du_melt,
du_melt[["row"]]  >= img_xlim[1],
du_melt[["row"]]  <= img_xlim[2],
du_melt[["col"]]  >= img_ylim[1],
du_melt[["col"]]  <= img_ylim[2])
grid.arrange(
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
geom_point(data=this_cat, aes(x=x, y=y, color=is_star), size=5) +
scale_fill_continuous(low="#000000", high="#FFFFFF", na.value = "purple")
,
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
scale_fill_continuous(low="#000000", high="#FFFFFF", na.value = "purple")
,
ncol=2
)
img_xlim <- c(150, 350)
img_ylim <- c(300, 450)
this_cat <- filter(dcat,
dcat[[cat.px.x.col]]  >= img_xlim[1],
dcat[[cat.px.x.col]]  <= img_xlim[2],
dcat[[cat.px.y.col]]  >= img_ylim[1],
dcat[[cat.px.y.col]]  <= img_ylim[2])
this_cat$x <- this_cat[[cat.px.x.col]]
this_cat$y <- this_cat[[cat.px.y.col]]
this_du <- filter(du_melt,
du_melt[["row"]]  >= img_xlim[1],
du_melt[["row"]]  <= img_xlim[2],
du_melt[["col"]]  >= img_ylim[1],
du_melt[["col"]]  <= img_ylim[2])
grid.arrange(
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
geom_point(data=this_cat, aes(x=x, y=y, color=is_star), size=5) +
scale_fill_continuous(low="#000000", high="#FFFFFF", na.value = "purple")
,
ggplot() +
geom_raster(data=this_du, aes(x=row, y=col, fill=value)) +
scale_fill_continuous(low="#000000", high="#FFFFFF", na.value = "purple")
,
ncol=2
)
this_cat
d <- read.csv("/tmp/b_boot.csv", header=TRUE)
d
d <- read.csv("/tmp/b_boot.csv", header=FALSE)
library(ggplot2)
library(ggplot2)
library(ggplot)
library(ggplot2)
library(ggplot2)
library("ggplot2")
library(ggplot2)
install.packages("ggplot2")
library("ggplot2")
readline()
for (i=1:ncol(d)) {
print(ggplot() + geom_histogram(aes(x=[,1])) + ggtitle(i))
readline()
for (i in 1:ncol(d)) {
print(ggplot() + geom_histogram(aes(x=[,1])) + ggtitle(i))
readline()
print(ggplot() + geom_histogram(aes(x=[,1])) + ggtitle(i))
print(ggplot() + geom_histogram(aes(x=d[,1])) + ggtitle(i))
i <- 1
print(ggplot() + geom_histogram(aes(x=d[,1])) + ggtitle(i))
for (i in 1:ncol(d)) {
print(ggplot() + geom_density(aes(x=d[,1])) + ggtitle(i))
readline()
}
?expand_limits
help(expand_limits)
help("expand_limits")
for (i in 1:ncol(d)) {
print(ggplot() + geom_density(aes(x=d[,1])) + ggtitle(i))
readline()
}
for (i in 1:ncol(d)) {
print(ggplot() + geom_density(aes(x=d[,i])) + ggtitle(i))
readline()
}
print(ggplot() + geom_histogram(aes(x=d[,i])) + ggtitle(i)) + geom_vline(aes(0))
?geom_vline
histogram(d[,i])
hist(d[,i])
ncol(d)
install.packages("dplyr")
library(dplyr)
d <- read.csv("/tmp/b_boot.csv", header=FALSE)
colnames(d) <- paste("crm", 1:ncol(d))
rownames(d) <- paste("boot", 1:nrow(d))
d.melt <- melt(d)
library(reshape2)
d.melt <- melt(d)
ggplot(d.melt) + geom_density(aes(x=value, color=thing), lwd=3)
head(d.melt)
ggplot(d.melt) + geom_density(aes(x=value, color=variable), lwd=3)
ggplot(d.melt) + geom_density(aes(x=value, color=variable), lwd=3) + facet_grid(~ variable)
ggplot(d.melt) + geom_density(aes(x=value, color=variable), lwd=3) + facet_gridvariable ~ .)
ggplot(d.melt) + geom_density(aes(x=value, color=variable), lwd=3) + facet_grid(variable ~ .)
ggplot(d.melt) + geom_histogram(aes(x=value, color=variable), lwd=3) + facet_grid(variable ~ .)
ggplot(d.melt) + geom_histogram(aes(x=value, color=variable)) + facet_grid(variable ~ .)
ggplot(d.melt) + geom_histogram(aes(x=value, color=variable, binwidth=1)) + facet_grid(variable ~ .)
ggplot(d.melt) + geom_histogram(aes(x=value), binwidth=1) + facet_grid(variable ~ .)
d.melt
head(d.melt)
d
d <- read.csv("/tmp/b_boot_20.csv", header=FALSE)
colnames(d) <- paste("crm", 1:ncol(d))
rownames(d) <- paste("boot", 1:nrow(d))
d.melt <- melt(d)
ggplot(d.melt) + geom_histogram(aes(x=value), binwidth=1) + facet_grid(variable ~ .)
ggplot(d.melt) + geom_density(aes(x=value)) + facet_grid(variable ~ .)
head(d.melt)
ggplot(filter(d.melt, variable != "crm 1")) + geom_density(aes(x=value)) + facet_grid(variable ~ .)
library(ggplot2)
library(dplyr)
library(reshape2)
library(jsonlite)
library(gridExtra)
base.dir <- "~/Documents/git_repos/variational_bayes/poisson_glmm/"
setwd(base.dir)
source(file.path(base.dir, "r_analysis/r_analysis_lib.R"))
data.path <- file.path(base.dir, "data")
#analysis.name <- "poisson_glmm"
#analysis.name <- "poisson_glmm_low_epsilon"
analysis.name <- "poisson_glmm_z_theta_cov"
analysis.range <- "1_100"
full.cov <- FALSE
filename <- file.path(data.path, sprintf("%s_%s_results.csv", analysis.name, analysis.range))
results <- read.csv(filename, header=T)
results1 <- filter(results, measurement %in%  c("mean", "sd"),
variable %in% c("mu", "tau", "log_tau")) %>%
dcast(sim.id + variable + measurement ~ method)
ggplot(filter(results1, measurement == "mean")) +
geom_point(aes(x=mcmc, y=mfvb), size=3) +
geom_abline(aes(intercept=0, slope=1)) +
expand_limits(x=0, y=0) +
geom_abline(aes(slope=1, intercept=0), color="gray") +
facet_grid(~ variable)
ggplot(filter(results1, measurement == "sd", variable == "mu")) +
geom_point(aes(x=mcmc, y=mfvb, color="mfvb"), size=3) +
geom_point(aes(x=mcmc, y=lrvb, color="lrvb"), size=3) +
geom_abline(aes(intercept=0, slope=1)) +
expand_limits(x=0, y=0) +
geom_abline(aes(slope=1, intercept=0), color="gray") +
scale_color_discrete(name="Method:") +
facet_grid(~ variable)
library(ggplot2)
library(dplyr)
library(reshape2)
data.path <- "/tmp"
analysis.name <- "poisson_glmm"
filename <- file.path(data.path, sprintf("%s_results.csv", analysis.name))
results <- read.csv(filename, header=T)
results1 <- filter(results, measurement %in%  c("mean", "sd")) %>%
dcast(sim.id + variable + measurement ~ method)
ggplot(filter(results1, measurement == "mean")) +
geom_point(aes(x=truth, y=mfvb, color="vb"), size=3) +
geom_point(aes(x=truth, y=mcmc, color="mcmc"), size=3) +
geom_abline(aes(intercept=0, slope=1)) +
expand_limits(x=0, y=0) +
geom_abline(aes(slope=1, intercept=0), color="gray") +
facet_grid(~ variable)
ggplot(filter(results1, measurement == "sd")) +
#geom_point(aes(x=mcmc, y=mfvb, color="mfvb"), size=3) +
geom_point(aes(x=mcmc, y=lrvb, color="lrvb"), size=3) +
geom_abline(aes(intercept=0, slope=1)) +
expand_limits(x=0, y=0) +
geom_abline(aes(slope=1, intercept=0), color="gray") +
facet_grid(~ variable)
data.path <- file.path(Sys.getenv("GIT_REPO_LOC"), "variational_bayes/linear_regression/data")
library(ggplot2)
library(dplyr)
library(reshape2)
data.path <- file.path(Sys.getenv("GIT_REPO_LOC"), "variational_bayes/linear_regression/data")
analysis.name <- "re_regression_z_x1_x2_final"
filename <- file.path(data.path, sprintf("%s.csv", analysis.name))
results <- read.csv(filename, header=T)
head(results)
results1 <- filter(results, measurement %in%  c("mean", "sd")) %>%
dcast(sim.id + variable + measurement ~ method)
ggplot(filter(results1, measurement == "mean")) +
geom_point(aes(x=truth, y=mfvb, color="vb"), size=3) +
geom_point(aes(x=truth, y=mcmc, color="mcmc"), size=3) +
geom_abline(aes(intercept=0, slope=1)) +
expand_limits(x=0, y=0) +
geom_abline(aes(slope=1, intercept=0), color="gray") +
facet_grid(~ variable)
results
head(results)
unique(results$sim.id)
results1 <- filter(results, measurement %in%  c("mean", "sd")) %>%
dcast(sim.id + variable + measurement ~ method)
head(results1)
results1 <- filter(results, measurement %in%  c("mean", "sd")) %>%
dcast(sim.id + variable + measurement + component ~ method)
ggplot(filter(results1, measurement == "mean", )) +
geom_point(aes(x=truth, y=mfvb, color="vb"), size=3) +
geom_point(aes(x=truth, y=mcmc, color="mcmc"), size=3) +
geom_abline(aes(intercept=0, slope=1)) +
expand_limits(x=0, y=0) +
geom_abline(aes(slope=1, intercept=0), color="gray") +
facet_grid(~ variable)
head(results1)
ggplot(filter(results1, measurement == "mean", )) +
geom_point(aes(x=truth, y=mfvb, color="vb"), size=3) +
geom_point(aes(x=truth, y=mcmc, color="mcmc"), size=3) +
geom_abline(aes(intercept=0, slope=1)) +
expand_limits(x=0, y=0) +
geom_abline(aes(slope=1, intercept=0), color="gray") +
facet_grid(~ variable)
ggplot(filter(results1, measurement == "mean", )) +
geom_point(aes(x=truth, y=mfvb, color="vb"), size=3) +
geom_point(aes(x=truth, y=mcmc, color="mcmc"), size=3)
ggplot(filter(results1, measurement == "mean", )) +
geom_point(aes(x=truth, y=mfvb, color="vb"), size=3)
ggplot(filter(results1, measurement == "mean")) +
geom_point(aes(x=truth, y=mfvb, color="vb"), size=3) +
geom_point(aes(x=truth, y=mcmc, color="mcmc"), size=3) +
geom_abline(aes(intercept=0, slope=1)) +
expand_limits(x=0, y=0) +
geom_abline(aes(slope=1, intercept=0), color="gray") +
facet_grid(~ variable)
ggplot(filter(results1, measurement == "sd")) +
#geom_point(aes(x=mcmc, y=mfvb, color="mfvb"), size=3) +
geom_point(aes(x=mcmc, y=lrvb, color="lrvb"), size=3) +
geom_abline(aes(intercept=0, slope=1)) +
expand_limits(x=0, y=0) +
geom_abline(aes(slope=1, intercept=0), color="gray") +
facet_grid(~ variable)
